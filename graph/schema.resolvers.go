package graph

// This file will be automatically regenerated based on the schema, any resolver implementations
// will be copied through when generating and any unknown code will be moved to the end.
// Code generated by github.com/99designs/gqlgen version v0.17.39

import (
	"gqlserver/graph/model"
	"context"
//	"fmt"
)

// CreateSession is the resolver for the createSession field.
func (r *mutationResolver) CreateSession(ctx context.Context, input model.CreateSessionInput) (*model.Session, error) {
	//panic(fmt.Errorf("not implemented: CreateSession - createSession"))
	testSession := &model.Session {
		Token: "10000000-0000-0000-0000-000000000002",
	}
	return testSession, nil
}


// CreateEvent is the resolver for the createEvent field.
func (r *mutationResolver) CreateEvent(ctx context.Context, input model.CreateEventInput) (*model.Event, error) {
	//panic(fmt.Errorf("not implemented: CreateEvent - createEvent"))
	testSession := &model.Event {
		ID: "10000000-0000-0000-0000-000000000002",
	}
	return testSession, nil
}

// Mutation returns MutationResolver implementation.
func (r *Resolver) Mutation() MutationResolver { return &mutationResolver{r} }

type mutationResolver struct{ *Resolver }
